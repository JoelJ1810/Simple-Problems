# -*- coding: utf-8 -*-
"""
1. Write a python program to read a list of numbers. 
*   Find the mean and median and print.

*   Remove all duplicates present in the list.

* Remove the numbers that occur more than 3 times
"""

import string
lst=[]
n=int(input("Enter total number of elements in a list"))
for i in range(0,n):
  ele=int(input())
  lst.append(ele)
a = len(lst)
sum1=sum(lst)
mean=sum1/a
print(mean)

lst.sort()
if n%2==0:
  med1=lst[n//2]
  med2=lst[n//2-1]
  med=(med1+med2)/2
else:
  med=lst[n//2]
print("Median is :",med)



temp=list(set(lst))
print("Elements without duplicate is:",temp)


new_lst2=[]
for i in lst:
  if(lst.count(i)>3):
    continue
  else:
    new_lst2.append(i)
print("After removing the element count greater than 3 : ",new_lst2)

"""**2. Write a python program to find the reverse pair of words in the given word list.**"""

lst=[]
n=int(input("Enter total number of words in a list"))
for i in range(0,n):
  ele=input()
  lst.append(ele)




for i in lst:
  print("The reverse words are:",i[::-1])

"""3. Get a text from the user. Add “ed” at the of the string. Length of the string must be atleast 5.
If the string already has “ed” at the end, then add ing. If the length of the string is less than
6, print the string unchanged with a message.
"""

inp=input("Enter Your Word Here")
length=len(inp)
if length <5:
  print(inp)
  print("your string is too small")
elif length>=5:
  if(inp[length-1]=='d'and inp[length-2=='e']):
    inp=inp+"ing"
    print(inp)
  else:
    inp=inp+"ed"
    print(inp)

"""4. Get a string from the user. Encrypt the string and print both the strings. Use the following
rules to encrypt the string
 Add a number to each alphabet in the given string to generate its corresponding
letter
 Number should be taken from the user
Example: PYTHON, Number=2 and encrypted string = RAVJQP
"""

str1=input("Enter the String: ")
num=int(input("Enter the Code: "))
str2=str1.upper()
for i in str2:
  if((ord(i)+num)>90):
    n=(ord(i)+num)-(26)
  else:
    n=ord(i)+num
  print(chr(n),end="")

"""5. Assign a random sequence of strings to a list “Guess”. Strings must be “True” “False” and do
the following
  1. Assign number of occurrences of “True” in a list
  2. Assign number of occurrences of “False” in a list
  3. Assign the percentage of strings that represents “True” in a list.
  4. Sort and list all the answers
"""

import random
guess=[]
random.choice([True, False])

Guess = ["True","True","False","True","False","True","False","False"]
a = Guess.count("True")
b = Guess.count("False")
l = len(Guess)
p = a / l * 100
new_list = []
new_list.insert(0,a)
new_list.insert(0,b)
new_list.insert(0,p)
print("Original List:\n ")
print(Guess)
new_list.sort()
print("\nNew List is:\n")
print(new_list)